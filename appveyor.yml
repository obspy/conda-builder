environment:
  binstar_token:
    secure: g84Tj7oJ+laNXzHwJ8BDcGn/sjwMgGJnRaoqTipft9zHQPanab3UwXI2jO2JM1h/

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\continuous-integration\\appveyor\\run_with_env.cmd"

  matrix:

    - PYTHON: "C:\\Python27_64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "27"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python27_64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "27"
      CONDA_NPY: "18"

    - PYTHON: "C:\\Python27_32"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      CONDA_PY: "27"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python27_32"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      CONDA_PY: "27"
      CONDA_NPY: "18"

    - PYTHON: "C:\\Python34_64"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "64"
      CONDA_PY: "34"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python34_64"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "64"
      CONDA_PY: "34"
      CONDA_NPY: "18"

    - PYTHON: "C:\\Python34_32"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "32"
      CONDA_PY: "34"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python34_32"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "32"
      CONDA_PY: "34"
      CONDA_NPY: "18"

    - PYTHON: "C:\\Python26_64"
      PYTHON_VERSION: "2.6"
      PYTHON_ARCH: "64"
      CONDA_PY: "26"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python26_64"
      PYTHON_VERSION: "2.6"
      PYTHON_ARCH: "64"
      CONDA_PY: "26"
      CONDA_NPY: "18"

    - PYTHON: "C:\\Python26_32"
      PYTHON_VERSION: "2.6"
      PYTHON_ARCH: "32"
      CONDA_PY: "26"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python26_32"
      PYTHON_VERSION: "2.6"
      PYTHON_ARCH: "32"
      CONDA_PY: "26"
      CONDA_NPY: "18"

    - PYTHON: "C:\\Python33_64"
      PYTHON_VERSION: "3.3"
      PYTHON_ARCH: "64"
      CONDA_PY: "33"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python33_64"
      PYTHON_VERSION: "3.3"
      PYTHON_ARCH: "64"
      CONDA_PY: "33"
      CONDA_NPY: "18"

    - PYTHON: "C:\\Python33_32"
      PYTHON_VERSION: "3.3"
      PYTHON_ARCH: "32"
      CONDA_PY: "33"
      CONDA_NPY: "19"

    - PYTHON: "C:\\Python33_32"
      PYTHON_VERSION: "3.3"
      PYTHON_ARCH: "32"
      CONDA_PY: "33"
      CONDA_NPY: "18"

install:
  # this installs the appropriate Miniconda (Py2/Py3, 32/64 bit),
  # as well as pip, conda-build, and the binstar CLI
  - powershell .\\continuous-integration\\appveyor\\install.ps1
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

build: false

test_script:

  # Remove LICENSE and README.md files here which can conflict with glue's
  - rm LICENSE README.md

  # Build and test the package. This appears(?) to sporadically fail due to a
  # bug in conda-build on 32 bit python.
  # https://github.com/conda/conda-build/issues/152
  #
  # Note also that our setup.py script, which is called by conda-build, writes
  # a __conda_version__.txt file, so the version number on the binary package
  # is set dynamically. This unfortunately mean that conda build --output
  # doesn't really work.
  #
  - "%CMD_IN_ENV% conda info"
  - "%CMD_IN_ENV% conda build --version"
  - "%CMD_IN_ENV% conda update conda conda-build binstar jinja2 --yes"
  - "%CMD_IN_ENV% conda build obspy-0.10.1rc1"

  # Move the conda package into the current directory, to register it
  # as an "artifact" for Appveyor. cmd.exe does't have good globbing, so
  # we'll use a simple python script.
  - python continuous-integration\move-conda-package.py obspy-0.10.1rc1
  - python -c "print('=' * 40)"
  - python -c "import os; print(os.path.abspath(os.getcwd()))"

artifacts:
  # Archive the generated conda package in the ci.appveyor.com build report.
  - path: '*.tar.bz2'
  - path: '*.egg'
  - path: '*.whl'
  - path: '*obspy*.exe'

on_success:
  # Upload built binaries to binstar.org. The globbing and handling of the
  # exit-status code is tricky in cmd.exe or powershell, so we're just using
  # a python script.
  - python continuous-integration\binstar-push.py
